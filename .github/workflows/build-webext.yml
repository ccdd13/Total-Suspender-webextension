# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build webext CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.16.0 ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:

    - run: sudo apt-get install -y tree

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: update npm/yarn
      run: npm install -g npm@latest yarn@latest

    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2
      id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name:  npm install synp@latest
      run: npm install -g synp@latest

    - name: bump version
      run: |
        node --version
        npm --version
        yarn --version

#    - name : package-lock.json => yarn.lock
#      run: |
#        synp --source-file package-lock.json
#        rm -fv package-lock.json

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - run: npm install
    - run: npm dedupe
    - run: npm doctor
    - run: npm audit
    - run: npm outdated
    - run: npm fund
    
    - run: npm run build-dev
    - run: npm run build-prod
    - run: npm run lint
    - run: npm run test
    - run: npm run pack

    - run: tree -a
